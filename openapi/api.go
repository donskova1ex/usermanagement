// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Swagger user management service - OpenAPI 3.0
 *
 * This is a sample User management server based on the OpenAPI 3.0 specification.
 *
 * API version: 1.0.0
 */

package openapi

import (
	"context"
	"net/http"
)

// RolesAPIRouter defines the required methods for binding the api requests to a responses for the RolesAPI
// The RolesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a RolesAPIServicer to perform the required actions, then write the service results to the http response.
type RolesAPIRouter interface {
	GetAllRoles(http.ResponseWriter, *http.Request)
	GetRoleById(http.ResponseWriter, *http.Request)
	EditRoleByID(http.ResponseWriter, *http.Request)
	DeleteRoleByID(http.ResponseWriter, *http.Request)
}

// UserRolesAPIRouter defines the required methods for binding the api requests to a responses for the UserRolesAPI
// The UserRolesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a UserRolesAPIServicer to perform the required actions, then write the service results to the http response.
type UserRolesAPIRouter interface {
	GetUserRolesByUserId(http.ResponseWriter, *http.Request)
	EditUserRolesByUserID(http.ResponseWriter, *http.Request)
}

// UsersAPIRouter defines the required methods for binding the api requests to a responses for the UsersAPI
// The UsersAPIRouter implementation should parse necessary information from the http request,
// pass the data to a UsersAPIServicer to perform the required actions, then write the service results to the http response.
type UsersAPIRouter interface {
	GetAllUsers(http.ResponseWriter, *http.Request)
	GetUserById(http.ResponseWriter, *http.Request)
	EditUserByID(http.ResponseWriter, *http.Request)
	DeleteUserByID(http.ResponseWriter, *http.Request)
}

// RolesAPIServicer defines the api actions for the RolesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type RolesAPIServicer interface {
	GetAllRoles(context.Context) (ImplResponse, error)
	GetRoleById(context.Context, string) (ImplResponse, error)
	EditRoleByID(context.Context, string, Role) (ImplResponse, error)
	DeleteRoleByID(context.Context, string) (ImplResponse, error)
}

// UserRolesAPIServicer defines the api actions for the UserRolesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type UserRolesAPIServicer interface {
	GetUserRolesByUserId(context.Context, string) (ImplResponse, error)
	EditUserRolesByUserID(context.Context, string, []UserRole) (ImplResponse, error)
}

// UsersAPIServicer defines the api actions for the UsersAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type UsersAPIServicer interface {
	GetAllUsers(context.Context) (ImplResponse, error)
	GetUserById(context.Context, string) (ImplResponse, error)
	EditUserByID(context.Context, string, User) (ImplResponse, error)
	DeleteUserByID(context.Context, string) (ImplResponse, error)
}
