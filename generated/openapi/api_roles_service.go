// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Swagger user management service - OpenAPI 3.0
 *
 * This is a sample User management server based on the OpenAPI 3.0 specification.
 *
 * API version: 1.0.0
 */

package openapi

import (
	"context"
	"errors"
	"net/http"
)

// RolesAPIService is a service that implements the logic for the RolesAPIServicer
// This service should implement the business logic for every endpoint for the RolesAPI API.
// Include any external packages or services that will be required by this service.
type RolesAPIService struct {
}

// NewRolesAPIService creates a default api service
func NewRolesAPIService() *RolesAPIService {
	return &RolesAPIService{}
}

// GetAllRoles - Provides a list of roles
func (s *RolesAPIService) GetAllRoles(ctx context.Context) (ImplResponse, error) {
	// TODO - update GetAllRoles with the required logic for this service method.
	// Add api_roles_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []Role{}) or use other options such as http.Ok ...
	// return Response(200, []Role{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetAllRoles method not implemented")
}

// GetRoleById - Find role by ID
func (s *RolesAPIService) GetRoleById(ctx context.Context, id string) (ImplResponse, error) {
	// TODO - update GetRoleById with the required logic for this service method.
	// Add api_roles_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Role{}) or use other options such as http.Ok ...
	// return Response(200, Role{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetRoleById method not implemented")
}

// EditRoleByID - edit role by ID
func (s *RolesAPIService) EditRoleByID(ctx context.Context, id string, role Role) (ImplResponse, error) {
	// TODO - update EditRoleByID with the required logic for this service method.
	// Add api_roles_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Role{}) or use other options such as http.Ok ...
	// return Response(200, Role{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("EditRoleByID method not implemented")
}

// DeleteRoleByID - delete role by ID
func (s *RolesAPIService) DeleteRoleByID(ctx context.Context, id string) (ImplResponse, error) {
	// TODO - update DeleteRoleByID with the required logic for this service method.
	// Add api_roles_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteRoleByID method not implemented")
}
